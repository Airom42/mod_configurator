<?xml version="1.0" encoding="utf-8" ?>
<mod>
    <name>Mod Configurator</name>
    <description>Saves and Loads mod configs for each of your saves!</description>
    <author>Airom</author>
    <version>1.2.0</version>
    <init>
      <!-- NOTE: Improper use of this system can result in you having to manually enable/disable all your mods.
      To save a config to a save file, use saveModConfig() or smc(). Once you have saved a config to a save file, use loadModConfig() or lmc() to load the mods to that file.
      Reloading mods is somewhat unstable, and may cause your game to crash.
      enableAllMods() and disableAllMods() do just that (except for core, full, and this mod) -->
      <action>
          function enableAllMods(){
            for(mod in getMods()) mod.setEnabled(true);
          }
          function disableAllMods(){
            var blacklist = ['Full Version', 'Core', 'Mod Configurator'];
            for(mod in getMods()) if(blacklist.indexOf(mod.name) == -1) mod.setEnabled(false);
          }

          //Saves the list of currently enabled mods as a stringified array to the save
          function saveModConfig(){
            var modList = [];
            for(mod in getMods()) {
              if (mod.isEnabled()){
                underName = new EReg("[ ]+", "g").replace(mod.name, "_");
                lowerName = underName.toLowerCase();
                modList.push(lowerName);
              }
            }
            getLocalPlayer().setString('enabled_mods', modList);
            return 'Mod config stored. Save your game to complete process.';
          }

          //Loads the mod config from the saved stringified array
          function loadModConfig(){
            disableAllMods();
            text = getLocalPlayer().getString('enabled_mods');
            if(text == null) return 'No mod config found';
            list = text.substr(1,text.length-2).split(",");
            for(num in 0 ... list.length){
              if(getMod(list[num]) != null) getMod(list[num]).setEnabled(true);
              else trace(list[num] + ' is null');
            }
            reloadData();
            return 'Mod config loaded. Reload save to complete process.';
          }
          //Alias functions for ease of use
          function lmc(){
            loadModConfig();
          }
          function smc(){
            saveModConfig();
          }
      </action>
    </init>
</mod>
